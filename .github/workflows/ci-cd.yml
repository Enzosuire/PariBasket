name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: mydatabase
        ports:
          - 3306:3306

    steps:
      # Checkout du code
      - name: Checkout code
        uses: actions/checkout@v3

      # Configuration du backend (Symfony)
      - name: Setup Backend
        working-directory: ./backend
        run: |
          cp .env.test .env
          composer install
          php bin/console doctrine:database:create --if-not-exists
          php bin/console doctrine:schema:update --force

      # Lancer les tests Symfony
      - name: Run Backend Tests
        working-directory: ./backend
        run: php bin/phpunit

      # Configuration du frontend (React Native)
      - name: Setup Frontend
        working-directory: ./frontend
        run: |
          yarn install
          yarn test

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      # Checkout du code
      - name: Checkout code
        uses: actions/checkout@v3

      # DÃ©ployer les services avec Docker Compose
      - name: Deploy with Docker Compose
        run: |
          docker-compose pull
          docker-compose up -d
