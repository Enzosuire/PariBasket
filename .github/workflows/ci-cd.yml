name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7 
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: Paribasket
        ports:
          - 3306:3306 

    steps:
      #  Récupération du code
      - name: Checkout code
        uses: actions/checkout@v3

      #  Installation de PHP et des extensions
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, pdo, pdo_mysql, intl

      #  Cache Composer pour accélérer les builds
      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: vendor
          key: composer-${{ runner.os }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: composer-${{ runner.os }}-

      #  Installation des dépendances Symfony
      - name: Install Dependencies
        run: composer install --no-interaction --prefer-dist

      #  Attendre que MySQL soit prêt
      - name: Wait for MySQL
        run: sleep 10s

      #  Configuration de la base de données
      - name: Setup Database
        env:
          DATABASE_URL: mysql://root:root@127.0.0.1:3306/paribasket?charset=utf8mb4
        run: php bin/console doctrine:schema:update --force

      #  Lancer les tests Symfony
      - name: Run Backend Tests
        env:
          DATABASE_URL: mysql://root:root@127.0.0.1:3306/paribasket?charset=utf8mb4
        run: php bin/phpunit

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      #  Récupération du code
      - name: Checkout code
        uses: actions/checkout@v3

      #  Vérifier que docker-compose.yml existe avant de déployer
      - name: Deploy with Docker Compose
        run: |
          if [ -f docker-compose.yml ]; then
            docker-compose pull
            docker-compose up -d
          else
            echo "No docker-compose.yml found!"
            exit 1
          fi
